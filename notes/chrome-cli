

http://localhost:8000

call ChromeDevTools_Page_reload()
call ChromeDevTools_Runtime_evaluate( 'test11()' )
call ChromeDevTools_Runtime_evaluate( 'console.log( 33 )' )
call ChromeDevTools_CSS_createStyleSheet()

# Next
how to call an update function and push data to the graph - just from chrome dev tools


# Setup
put this into the <body> tag of ./public/index.html of your React project or an Html page:

    <div id="evalCode" style="display:none">code</div>
    <script>
    // Observe-Inject-Eval: Observe a DOM node, inject code into the node, evaluate the code to call functions in the app
    // Requires this tag in the body: <noscript id=evalCode>code</noscript>
    const targetNode = document.getElementById('evalCode');
    const config = { attributes: true, childList: true, subtree: true };
    const codeEvalCB = (mutationsList, observer) => {
      mutationsList.forEach( _ => {
          eval( targetNode.innerHTML );
      });
    };
    const observer = new MutationObserver(codeEvalCB);
    observer.observe(targetNode, config);
    // Observe-Inject-Eval
    </script>


# Server start for html pages
python -m http.server
/Users/at/.config/nvim/notes/testpage1.html
Documents/Temp/test.html

chrome-cli execute 'document.getElementById("demo").innerHTML = "Hello JavaScript!";'

chrome-cli list tabs

chrome-cli execute 'console.log("hi")'
chrome-cli execute 'console.log( document.getElementById("evalCode").innerHTML )'
chrome-cli execute 'console.log( document.getElementById("demo").getAttribute("txx") )'
chrome-cli execute 'console.log( document.getElementById("demo").append("11") )'

chrome-cli execute 'document.getElementById("demo").innerHTML = "test11( \"89\" );"'
chrome-cli execute 'document.getElementById("evalCode").innerHTML = "test12( 89.1 );"'
chrome-cli execute 'document.getElementById("demo").innerHTML = "test11( [3,4,5] )"'
chrome-cli execute 'document.getElementById("evalCode").innerHTML = "test11( {aa: 33} )"'
chrome-cli execute 'document.getElementById("demo").innerHTML = "test11( Date )"'
chrome-cli execute 'document.getElementById("demo").innerHTML = "test11( test12 )"'
chrome-cli execute 'document.getElementById("demo").setAttribute("txx", "New 2 Text")'
chrome-cli execute 'document.getElementById("but").dispatchEvent(1)'

chrome-cli execute 'document.getElementById("demo").innerHTML = "Hello JavaScript!";'

chrome-cli execute 'document.getElementById("evalCode").innerHTML = "Date();"'


(async () => {
    console.log("hi");
    await new Promise(r => setTimeout(r, 2000));
    console.log("done");
})();

## TODO Run a file
myscript.js:

(async () => {
    // load jQuery
    const jReq = await fetch('https://code.jquery.com/jquery-3.5.0.slim.min.js')
    jText = await jReq.text()
    eval(jText)

    // now ready for use:
    console.log(jQuery().jquery)
})()
... then in terminal:

JS=$(cat myscript.js)
JS=$(cat replSrc_test1.js)
chrome-cli execute "$JS" -t "1234"
chrome-cli execute "$JS" -t "1234"


# Bundle identifyer

mdls -name kMDItemCFBundleIdentifier -raw /Applications/Brave\ Browser.app
mdls -name kMDItemCFBundleIdentifier -raw /Applications/Chromium.app/
/Applications/Chromium.app/
org.chromium.Chromium

CHROME_BUNDLE_IDENTIFIER="org.chromium.Chromium" chrome-cli list tabs


chrome-cli execute 'document.getElementById("evalCode").innerHTML = "console.log(window.Utils.mock(2))"'
chrome-cli execute 'document.getElementById("evalCode").innerHTML = "window.Utils.mock(2)"'

let g:tmp = shellescape( 'Date()' )
chrome-cli execute 'document.getElementById("evalCode").innerHTML = ' . g:tmp


chrome-cli execute 'document.getElementById("returnVal").innerHTML'

{"options":{"nodeCount":2,"nodeType":"company"},"nodes":[{"id":"node-0","label":"node-0","type":"company"},{"id":"node-1","label":"node-1","type":"company"}],"edges":[{"source":"node-0","target":"node-0"},{"source":"node-1","target":"node-0"}],"nodeIds":["node-0","node-1"],"treeData":{"nodeIds":[]}}


chrome-cli execute 'document.getElementById("evalCode").innerHTML = "(function ab () {return window.Utils.mock(2)})"'

chrome-cli execute 'document.getElementById("evalCode").innerHTML = "1 + 3"'

'(function() { var nodes = document.querySelectorAll(".title a"); var titles = []; for (var i = 0; i < 5; i++) { titles.push(nodes[i].innerHTML) } return titles.join("\n"); })();' -t 2155

'(function() {

var nodes = document.querySelectorAll(".title a");
var titles = [];
for (var i = 0; i < 5; i++) { titles.push(nodes[i].innerHTML) }
return titles.join("\n"); })();' -t 2155

(function() { return 4 + 8 })()
chrome-cli execute '(function() { return 4 + 8 })()'

const json = '{"result":true, "count":42}';
const obj = JSON.parse(json);
const e1_obj = obj.result
const e2_obj = obj.count

(function() {const json = '{"result":true, "count":42}'; const obj = JSON.parse(json); return obj.count})()



