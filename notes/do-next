

# Database integration
https://alpha2phi.medium.com/neovim-database-completion-d1f590634338


https://github.com/kristijanhusak/vim-dadbod-ui/blob/master/README.md
https://github.com/lighttiger2505/sqls


# jupyter notebooks
https://alpha2phi.medium.com/publishing-jupyter-notebook-167ec3b653a2


# Jobs
note the job sequence summary here:
https://alpha2phi.medium.com/faster-neovim-plugin-development-with-plenary-nvim-e5ba8dcd12a3

are now easy to set up:
notes/notes-lua-asyc-loop.md
/Users/at/Documents/Temp/plenary.nvim/scratch/jobtest.lua

Rework bookmarks: ~/.vim/plugin/file-manage.vim#/Shortcuts%20to%20popular
also see notes/links

colors, maps etc for codi https://github.com/metakirby5/codi.vim/blob/master/doc/codi.txt
the old spell should still work
!python <filename> with shellreturn

## open new vim tab from terminal (using deno)
 https://github.com/lambdalisue/guise.vim
https://alpha2phi.medium.com/a-vim-neovim-plugin-ecosystem-to-try-9221c642cbf9

# Deno
/opt/homebrew/Cellar/deno/1.17.3: 10 files, 66.6MB

zsh completions have been installed to:
  /opt/homebrew/share/zsh/site-functions

gwt ->
deno run https://deno.land/std/examples/welcome.ts

echo exepath('deno')

brew tap wez/wezterm
brew install --cask wez/wezterm/wezterm



# Older notes / todos:

search and sel a git working dir (open divish folder and set lcd)
there is a projects plugin in lvim
note that ctrlp has a directory selector using c-f in the window.

all maps/ commands into fzf and qucklist supprt

revisit my process for applying commands to paths



# Syc & show: Run terminal command and show result in float-win
- return result of command to float win. example 'ls -a'
Async launch: Launch an app/service. Pass params, no return vals, no interaction
- vs code, mpv
- ytdl, youtube-dl  - they should notify when done. but may take a long time to finish. and there may be a list. - progress indicator in terminal
Interactive:
- node repl

# Input param: (visible in menu)
a single path, url or strings
- vis sel
- from cursor to end of line

# Commands:
i'll list all commands (including tricky options).
most commands will only have one useful mode - syc with return, asyn (with progress or without),
interactive - so this will be encoded in the menu option

# Shell execution
i can put a list of filepaths in a scratchbuffer and :setf dirvish
the i can collect into the arglist ('x' in dirvish) can collect arguments
then i'd do :Shdo! cp {} {}-bk to get:
cp 'test2' 'test2'-bk
cp 'vimdump-map.txt' 'vimdump-map.txt'-bk

i could use linescollector to add to a buffer of file paths
tryout :2Shdo of a selection of paths

ls ~/Documents/tests/YT-dls/







